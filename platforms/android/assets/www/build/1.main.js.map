{"version":3,"sources":["../../src/pages/register-page/register-page.module.ts","../../node_modules/@ionic-native/speech-recognition/index.js","../../node_modules/@ionic-native/text-to-speech/index.js","../../src/pages/register-page/register-page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAuC;AACO;AACD;AACO;AACiB;AACT;AAkB5D,IAAa,kBAAkB;IAA/B;IAAiC,CAAC;IAAD,yBAAC;AAAD,CAAC;AAArB,kBAAkB;IAhB9B,8EAAQ,CAAC;QACR,YAAY,EAAE;YACZ,oEAAY;SACb;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,oEAAY,CAAC;YACtC,4EAAe,CAAC,QAAQ,EAAE;SAC3B;QACD,OAAO,EAAE;YACP,oEAAY;SACb;QACD,SAAS,EAAE;YACT,2FAAiB;YACjB,kFAAY;SACb;KACF,CAAC;GACW,kBAAkB,CAAG;AAAH;;;;;;;;;;;;;ACvB/B;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AACxB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,yBAAyB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iBAAiB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,kEAAmB;AACxB;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR,iC;;;;;;;;;;AC/KA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACqB;AACwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,eAAe;AAC1B;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,oBAAoB;AACjD,gBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,KAAK,kEAAmB;AACxB;AACA;AACA,2CAA2C,WAAW;AACtD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACQ;AACR,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9FwC;AAC0C;AAC3C;AAC2B;AACT;AAEY;AAC9B;AACqB;AAS5D,IAAa,YAAY;IAMvB,sBACS,OAAsB,EACtB,SAAoB,EACpB,QAAwB,EACxB,OAAgB,EAChB,WAAwB,EACxB,MAAyB,EACxB,GAAiB,EACjB,IAAY,EACb,WAAwB;QARxB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,YAAO,GAAP,OAAO,CAAS;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAmB;QACxB,QAAG,GAAH,GAAG,CAAc;QACjB,SAAI,GAAJ,IAAI,CAAQ;QACb,gBAAW,GAAX,WAAW,CAAa;QAZjC,gBAAW,GAAY,KAAK,CAAC;QAc3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACnC,KAAK,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YAChC,QAAQ,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;YACnC,eAAe,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,QAAQ,CAAC;SAC3C,CAAC,CAAC;IAEL,CAAC;IAED,qCAAc,GAAd;QACE,uEAAuE;QACvE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAE5B,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACX,MAAM,EAAE,OAAO;YACX,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,sBAAsB;SAC/B,CAAC;aACD,IAAI,CAAC,cAAM,cAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAtB,CAAsB,CAAC;aAClC,KAAK,CAAC,UAAC,MAAW,IAAK,cAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAnB,CAAmB,CAAC,CAAC;IAGnD,CAAC;IAED,+BAAQ,GAAR;QAAA,iBAKC;QAHC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aAC1C,IAAI,CAAC,cAAM,YAAI,CAAC,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,EAAnC,CAAmC,CAAC;aAC/C,KAAK,CAAC,WAAC,IAAI,cAAO,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC,EAA3B,CAA2B,CAAC,CAAC;IAC7C,CAAC;IAEO,oCAAa,GAAnB;;;;;;;wBAEyB,qBAAM,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE;;qCAAjC,SAAiC;wBACpD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;wBAExB,sBAAO,UAAU,EAAC;;;wBAElB,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;;;;;;KAElB;IAEG,oCAAa,GAAnB;;;gBACI,IAAI,CAAC;oBACH,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,CAAC;gBAClC,CAAC;gBAAC,KAAK,EAAC,CAAC,CAAC,CAAC,CAAC;oBACV,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,CAAC;;;;KACJ;IAED,6BAAM,GAAN;QACA,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QACvC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;YAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;aACzB,SAAS,CAAC,iBAAO;YAChB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;gBACb,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;gBACxB,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACvD,CAAC,CAAC;QACJ,CAAC,EAAE,eAAK,IAAI,cAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;IAEpC,CAAC;IAED,uCAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,KAAK,GAAG,IAAI,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7D,CAAC;IAEL,mBAAC;AAAD,CAAC;AA9FY,YAAY;IALxB,uFAAS,EAAE;IACX,+EAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;OACG;KAClC,CAAC;yEAQ+B;QACX,qEAAS;QACV,gEAAc;QACf,mEAAO;QACH,2FAAW;QAChB,mFAAiB;QACnB,sDAAY;QACX,4EAAM;QACA,SAAW;AA+ElC;SA9FY,YAAY,oB","file":"1.main.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {RegisterPage} from './register-page';\nimport {TranslateModule} from '@ngx-translate/core';\nimport { SpeechRecognition } from '@ionic-native/speech-recognition';\nimport { TextToSpeech } from '@ionic-native/text-to-speech';\n\n@NgModule({\n  declarations: [\n    RegisterPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    RegisterPage\n  ],\n  providers: [\n    SpeechRecognition,\n    TextToSpeech \n  ]\n})\nexport class RegisterPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register-page/register-page.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @name Speech Recognition\n * @description\n * This plugin does speech recognition using cloud services\n *\n * @usage\n * ```typescript\n * import { SpeechRecognition } from '@ionic-native/speech-recognition';\n *\n * constructor(private speechRecognition: SpeechRecognition) { }\n *\n * ...\n *\n *\n *\n * // Check feature available\n * this.speechRecognition.isRecognitionAvailable()\n *   .then((available: boolean) => console.log(available))\n *\n * // Start the recognition process\n * this.speechRecognition.startListening(options)\n *   .subscribe(\n *     (matches: Array<string>) => console.log(matches),\n *     (onerror) => console.log('error:', onerror)\n *   )\n *\n * // Stop the recognition process (iOS only)\n * this.speechRecognition.stopListening()\n *\n * // Get the list of supported languages\n * this.speechRecognition.getSupportedLanguages()\n *   .then(\n *     (languages: Array<string>) => console.log(languages),\n *     (error) => console.log(error)\n *   )\n *\n * // Check permission\n * this.speechRecognition.hasPermission()\n *   .then((hasPermission: boolean) => console.log(hasPermission))\n *\n * // Request permissions\n * this.speechRecognition.requestPermission()\n *   .then(\n *     () => console.log('Granted'),\n *     () => console.log('Denied')\n *   )\n *\n * ```\n */\nvar SpeechRecognition = (function (_super) {\n    __extends(SpeechRecognition, _super);\n    function SpeechRecognition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Check feature available\n     * @return {Promise<boolean>}\n     */\n    SpeechRecognition.prototype.isRecognitionAvailable = function () {\n        return;\n    };\n    /**\n     * Start the recognition process\n     * @return {Promise< Array<string> >} list of recognized terms\n     */\n    SpeechRecognition.prototype.startListening = function (options) {\n        return;\n    };\n    /**\n     * Stop the recognition process\n     */\n    SpeechRecognition.prototype.stopListening = function () {\n        return;\n    };\n    /**\n     * Get the list of supported languages\n     * @return {Promise< Array<string> >} list of languages\n     */\n    SpeechRecognition.prototype.getSupportedLanguages = function () {\n        return;\n    };\n    /**\n     * Check permission\n     * @return {Promise<boolean>} has permission\n     */\n    SpeechRecognition.prototype.hasPermission = function () {\n        return;\n    };\n    /**\n     * Request permissions\n     * @return {Promise<void>}\n     */\n    SpeechRecognition.prototype.requestPermission = function () {\n        return;\n    };\n    return SpeechRecognition;\n}(IonicNativePlugin));\nSpeechRecognition.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nSpeechRecognition.ctorParameters = function () { return []; };\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], SpeechRecognition.prototype, \"isRecognitionAvailable\", null);\n__decorate([\n    Cordova({\n        callbackOrder: 'reverse',\n        observable: true,\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Observable)\n], SpeechRecognition.prototype, \"startListening\", null);\n__decorate([\n    Cordova({\n        platforms: ['iOS']\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], SpeechRecognition.prototype, \"stopListening\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], SpeechRecognition.prototype, \"getSupportedLanguages\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], SpeechRecognition.prototype, \"hasPermission\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], SpeechRecognition.prototype, \"requestPermission\", null);\nSpeechRecognition = __decorate([\n    Plugin({\n        pluginName: 'SpeechRecognition',\n        plugin: 'cordova-plugin-speechrecognition',\n        pluginRef: 'plugins.speechRecognition',\n        repo: 'https://github.com/pbakondy/cordova-plugin-speechrecognition',\n        platforms: ['Android', 'iOS']\n    })\n], SpeechRecognition);\nexport { SpeechRecognition };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ionic-native/speech-recognition/index.js\n// module id = 312\n// module chunks = 1","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Text To Speech\n * @description\n * Text to Speech plugin\n *\n * @usage\n * ```typescript\n * import { TextToSpeech } from '@ionic-native/text-to-speech';\n *\n * constructor(private tts: TextToSpeech) { }\n *\n * ...\n *\n * this.tts.speak('Hello World')\n *   .then(() => console.log('Success'))\n *   .catch((reason: any) => console.log(reason));\n *\n * ```\n * @interfaces\n * TTSOptions\n */\nvar TextToSpeech = (function (_super) {\n    __extends(TextToSpeech, _super);\n    function TextToSpeech() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * This function speaks\n     * @param textOrOptions {string | TTSOptions} Text to speak or TTSOptions\n     * @return {Promise<any>} Returns a promise that resolves when the speaking finishes\n     */\n    TextToSpeech.prototype.speak = function (textOrOptions) {\n        return;\n    };\n    /**\n     * Stop any current TTS playback\n     * @return {Promise<any>}\n     */\n    TextToSpeech.prototype.stop = function () {\n        return;\n    };\n    return TextToSpeech;\n}(IonicNativePlugin));\nTextToSpeech.decorators = [\n    { type: Injectable },\n];\n/** @nocollapse */\nTextToSpeech.ctorParameters = function () { return []; };\n__decorate([\n    Cordova({\n        successIndex: 1,\n        errorIndex: 2\n    }),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", [Object]),\n    __metadata(\"design:returntype\", Promise)\n], TextToSpeech.prototype, \"speak\", null);\n__decorate([\n    Cordova(),\n    __metadata(\"design:type\", Function),\n    __metadata(\"design:paramtypes\", []),\n    __metadata(\"design:returntype\", Promise)\n], TextToSpeech.prototype, \"stop\", null);\nTextToSpeech = __decorate([\n    Plugin({\n        pluginName: 'Text To Speech',\n        plugin: 'cordova-plugin-tts',\n        pluginRef: 'TTS',\n        repo: 'https://github.com/vilic/cordova-plugin-tts',\n        platforms: ['Android', 'iOS', 'Windows Phone 8']\n    })\n], TextToSpeech);\nexport { TextToSpeech };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ionic-native/text-to-speech/index.js\n// module id = 313\n// module chunks = 1","import {Component} from '@angular/core';\nimport {IonicPage, NavController, NavParams, MenuController} from 'ionic-angular';\nimport {Storage} from '@ionic/storage';\nimport {Validators, FormBuilder, FormGroup} from '@angular/forms';\nimport {AuthService} from '../../providers/auth-service';\n\nimport { SpeechRecognition } from '@ionic-native/speech-recognition';\nimport { NgZone } from '@angular/core';\nimport { TextToSpeech } from '@ionic-native/text-to-speech';\n\n\n\n@IonicPage()\n@Component({\n  selector: 'page-register-page',\n  templateUrl: 'register-page.html',\n})\nexport class RegisterPage {\n\n  private regData: FormGroup;\n  isListening: boolean = false;\n  matches: Array<String>;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public menuCtrl: MenuController,\n    public storage: Storage,\n    public formBuilder: FormBuilder,\n    public speech: SpeechRecognition, \n    private tts: TextToSpeech,\n    private zone: NgZone,\n    public authService: AuthService) {\n\n    this.regData = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n      confirmPassword: ['', Validators.required]\n    });\n\n  }\n\n  ionViewDidLoad() {\n    //hide menu when on the login page, regardless of the screen resolution\n    this.menuCtrl.enable(false);\n    \n    this.tts.speak({\n        locale: 'es-US',\n            rate: 0.9,\n            text: 'Afíliate como Médico'\n        })\n        .then(() => console.log('Success'))\n        .catch((reason: any) => console.log(reason));\n    \n    \n  }\n\n  register() {\n    \n    this.authService.register(this.regData.value)\n      .then(() => this.navCtrl.setRoot('ProfilePage'))\n      .catch(e => console.log(\"reg error\", e));         \n  }\n  \n    async hasPermission():Promise<boolean> {\n        try {\n          const permission = await this.speech.hasPermission();\n          console.log(permission);\n\n          return permission;\n        } catch(e) {\n          console.log(e);\n        }\n      }\n\n    async getPermission():Promise<void> {\n        try {\n          this.speech.requestPermission();\n        } catch(e) {\n          console.log(e);\n        }\n    }\n    \n    listen(): void {\n    console.log('listen action triggered');\n    if (this.isListening) {\n      this.speech.stopListening();\n      this.toggleListenMode();\n      return;\n    }\n\n    this.toggleListenMode();\n    \n    let _this = this;\n\n    this.speech.startListening()\n      .subscribe(matches => {\n        _this.zone.run(() => {\n          _this.matches = matches;\n          _this.regData.controls['username'].setValue(matches);\n        })\n      }, error => console.error(error));\n\n    }\n\n    toggleListenMode():void {\n      this.isListening = this.isListening ? false : true;\n      console.log('listening mode is now : ' + this.isListening);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register-page/register-page.ts"],"sourceRoot":""}